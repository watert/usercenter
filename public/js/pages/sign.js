// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["backbone", "models/user", "bootstrap"], function(Backbone, User) {
    var BaseView, Sign, formData;
    Sign = {};
    BaseView = (function(_super) {
      __extends(BaseView, _super);

      function BaseView() {
        return BaseView.__super__.constructor.apply(this, arguments);
      }

      BaseView.prototype.render = function() {
        var data, _ref;
        data = ((_ref = this.model) != null ? _ref.toJSON() : void 0) || {};
        this.$el.html(this.tmpl(data));
        this.trigger("render");
        return typeof this.onRender === "function" ? this.onRender() : void 0;
      };

      return BaseView;

    })(Backbone.View);
    formData = function($form) {
      return _.object(_.map($form.find("input, select"), function(el) {
        var $input;
        $input = $(el);
        return [$input.attr("name"), $input.val()];
      }));
    };
    Sign.CtrlView = (function(_super) {
      __extends(CtrlView, _super);

      function CtrlView() {
        return CtrlView.__super__.constructor.apply(this, arguments);
      }

      CtrlView.prototype.events = {
        "submit #login": function(e) {
          var $form, data;
          e.preventDefault();
          $form = $(e.target);
          data = formData($form);
          return this.model.login(data);
        },
        "submit #signup": function(e) {
          var $form, data;
          e.preventDefault();
          $form = $(e.target);
          data = formData($form);
          this.model.signUp(data);
          return console.debug("signup", data, e.target);
        }
      };

      CtrlView.prototype.initialize = function(options) {
        CtrlView.__super__.initialize.call(this, options);
        console.debug(this.model);
        return this.model != null ? this.model : this.model = new User;
      };

      CtrlView.prototype.onRender = function() {
        return this.$(".nav-tabs a").click(function() {
          return $(this).tab("show");
        }).first().click();
      };

      CtrlView.prototype.tmpl = _.template("<div class=\"container\">\n	<div class=\"row\">\n		<div class=\"col-sm-6 col-sm-offset-3\">\n\n			<div class=\"panel panel-auth\">\n				<div class=\"panel-heading\"> Common login </div>\n				<div class=\"panel-body\">\n					<ul class=\"nav nav-tabs\">\n						<li class=\"\"><a href=\"#login\" data-toggle=\"tab\">Login</a></li>\n						<li><a href=\"#signup\" data-toggle=\"tab\">Sign Up</a></li>\n					</ul>\n					<div class=\"tab-content\">\n						<div class=\"tab-pane\" id=\"login\">\n							<form action=\"login\" class=\"form\">\n								<div class=\"form-group\">\n									<label>Email</label>\n									<input type=\"email\" name=\"email\" class=\"form-control\">\n								</div>\n								<div class=\"form-group\">\n									<label>Password</label>\n									<input type=\"password\" name=\"password\" class=\"form-control\">\n								</div>\n								<div class=\"form-actions\">\n									<button class=\"btn btn-login btn-primary\">Login</button>\n								</div>\n							</form>\n						</div>\n						<div class=\"tab-pane\" id=\"signup\">\n							<form action=\"login\" class=\"form\">\n								<div class=\"form-group\">\n									<label>User</label>\n									<input type=\"text\" name=\"user\" class=\"form-control\">\n								</div>\n								<div class=\"form-group\">\n									<label>Email</label>\n									<input type=\"email\" name=\"email\" class=\"form-control\">\n								</div>\n								<div class=\"form-group\">\n									<label>Password</label>\n									<input type=\"password\" name=\"password\" class=\"form-control\">\n								</div>\n								<div class=\"form-actions\">\n									<button class=\"btn btn-signup btn-primary\">Sign Up</button>\n								</div>\n							</form>\n						</div>\n					</div>\n				</div>\n			</div>\n\n		</div>\n	</div>\n</div>");

      return CtrlView;

    })(BaseView);
    return Sign;
  });

}).call(this);

//# sourceMappingURL=sign.js.map
