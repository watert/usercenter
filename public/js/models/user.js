// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "backbone"], function($, Backbone) {
    var User, promiseRequest, testData, urls;
    urls = {
      profile: "api/user/profile/",
      login: "api/user/login/",
      signOut: "api/user/signOut/",
      register: "api/user/register/"
    };
    testData = {
      name: "_testusername",
      password: "_testpass",
      email: "_test@email.com",
      profile: "Profile content"
    };
    promiseRequest = function(originalDfd) {
      return $.when(new User(testData));
      return originalDfd.then((function(_this) {
        return function(res) {
          return $.when(new User(res.data));
        };
      })(this));
    };
    User = (function(_super) {
      __extends(User, _super);

      function User() {
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.initialize = function(options) {
        User.__super__.initialize.call(this, options);
        return this.on("login", function(user) {
          return User.currentUser = user;
        });
      };

      User.prototype.url = function() {
        var id;
        id = this.get("id");
        if (id) {
          return "api/user/" + id;
        } else {
          return urls.profile;
        }
      };

      User.getCurrentUser = function() {
        return User.currentUser || null;
      };

      User.prototype.login = function(options) {
        var $dfd;
        $dfd = $.post(urls.login, options.data);
        return promiseRequest($dfd).done((function(_this) {
          return function(_user) {
            _this.set(_user.toJSON());
            User.currentUser = _this;
            console.debug("try trigger User", _this);
            _this.isLogin = true;
            return _this.trigger("login", _this);
          };
        })(this));
      };

      User.prototype.signUp = function(options) {
        var $dfd;
        $dfd = $.post(urls.register, options.data);
        return promiseRequest($dfd).done((function(_this) {
          return function(user) {
            _this.set(user.toJSON());
            return _this.trigger("signUp", _this);
          };
        })(this));
      };

      User.prototype.signOut = function(options) {
        promiseRequest($.get(urls.signOut));
        User.currentUser.stopListening();
        this.isLogin = false;
        return User.currentUser = null;
      };

      return User;

    })(Backbone.Model);
    _.extend(User, Backbone.Events);
    return User;
  });

}).call(this);

//# sourceMappingURL=user.js.map
